
:root {
  /* Change this to change the appearance of the hexaons */
  --hex-width: 75px; 
  --hex-between: 10px;
  
  /* Other hexagon dimentions */
  --hex-height: calc(var(--hex-width) / 1.73 /* sqrt(3) */);
  --hex-margin: calc(var(--hex-width) / 2);
  --hex-border: calc(var(--hex-margin) / 1.73 /* sqrt(3) */);
  --hex-transition: all .2s ease;
  
  /* Colors */
  --color-hex-default: #555555;
  --color-hex-hover:   #333333;
  
  --color-hex-empty: #FFFFFF;
  --color-hex-empty-hover: #FFFFFF;

  --color-hex-select: #44CC44;
  --color-hex-select-hover:   #22CC22;

  --color-hex-target: #CC4444;
  --color-hex-target-hover:   #CC2222;

  --color-hex-same: #4444CC;
  --color-hex-same-hover: #2222CC;

  --color-ballW: #EEEEEE;
  --color-ballB: #111111;
}

/* Hexagons */
.hexagon-container {
  margin: 0 auto;
  width: 750px; 
  
  display: grid;
  
  /* nombre de colonnes */ 
  grid-template-columns: var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width) var(--hex-width);
  
  grid-auto-rows: calc(var(--hex-width) - 28.87px/2);
  grid-gap: var(--hex-between) var(--hex-between);
  padding-bottom: var(--hex-border);
}
.hexagon {
  align-items: center;
  background-color: var(--color-hex-default);
  cursor: pointer;
  display: flex;
  fill: white;
  height: var(--hex-height);
  justify-content: center;
  margin: var(--hex-border) 0;
  position: relative;
  transition: var(--hex-transition);
  width: var(--hex-width);
}

.hexagon::after,
.hexagon::before {
  border-left: var(--hex-margin) solid transparent;
  border-right: var(--hex-margin) solid transparent;
  content: "";
  left: 0;
  position: absolute;
  transition: var(--hex-transition);
  width: 0;
}
.hexagon::after {
  border-top: var(--hex-border) solid var(--color-hex-default);
  top: 100%;
  width: 0;
}
.hexagon::before {
  border-bottom: var(--hex-border) solid var(--color-hex-default);
  bottom: 100%;
}
  
.hexagon:hover {
  background-color: var(--color-hex-hover);
}
.hexagon:hover::after,
.hexagon:hover::before {
  border-top-color: var(--color-hex-hover);
  border-bottom-color: var(--color-hex-hover);
}
 
.hexagon:nth-child(18n + 10),
.hexagon:nth-child(18n + 11),
.hexagon:nth-child(18n + 12),
.hexagon:nth-child(18n + 13),
.hexagon:nth-child(18n + 14),
.hexagon:nth-child(18n + 15),
.hexagon:nth-child(18n + 16),
.hexagon:nth-child(18n + 17),
.hexagon:nth-child(18n + 18) {
  margin-left: calc(var(--hex-width) / 2 + var(--hex-between) / 2);
}


.hexagon > svg {
  height: 75%;
  transition: var(--hex-transition);
}


.empty {
  background-color: var(--color-hex-empty);
  cursor: auto;
}
.empty::after,
.empty::before {
  border-top-color: var(--color-hex-empty);
  border-bottom-color: var(--color-hex-empty);
}
.empty:hover {
  fill: var(--color-hex-empty-hover);
  background-color: var(--color-hex-empty-hover);
}
.empty:hover::after,
.empty:hover::before {
  border-top-color: var(--color-hex-empty-hover);
  border-bottom-color: var(--color-hex-empty-hover);
}


.select {
  background-color: var(--color-hex-select);
}
.select::after,
.select::before {
  border-top-color: var(--color-hex-select);
  border-bottom-color: var(--color-hex-select);
}
.select:hover {
  fill: var(--color-hex-select-hover);
  background-color: var(--color-hex-select-hover);
}
.select:hover::after,
.select:hover::before {
  border-top-color: var(--color-hex-select-hover);
  border-bottom-color: var(--color-hex-select-hover);
}


.target {
  background-color: var(--color-hex-target);
}
.target::after,
.target::before {
  border-top-color: var(--color-hex-target);
  border-bottom-color: var(--color-hex-target);
}
.target:hover {
  fill: var(--color-hex-target-hover);
  background-color: var(--color-hex-target-hover);
}
.target:hover::after,
.target:hover::before {
  border-top-color: var(--color-hex-target-hover);
  border-bottom-color: var(--color-hex-target-hover);
}

.same {
  background-color: var(--color-hex-same);
}
.same::after,
.same::before {
  border-top-color: var(--color-hex-same);
  border-bottom-color: var(--color-hex-same);
}
.same:hover {
  fill: var(--color-hex-same-hover);
  background-color: var(--color-hex-same-hover);
}
.same:hover::after,
.same:hover::before {
  border-top-color: var(--color-hex-same-hover);
  border-bottom-color: var(--color-hex-same-hover);
}

.ballB, .ballW {
  z-index: 1;
  position: absolute;
  margin: 20px auto;
  width: 55px;
  height: 55px;
  border-radius: 200px;
}
.ballB {
  background-color: var(--color-ballB);
}
.ballW {
  background-color: var(--color-ballW);
}


#playerColorIndicator {
    text-align: right;
    float:left;
    width:49%;
    font-size: 25px;
}
#turnToPlayIndicator {
    text-align: left;
    margin-left:51%;
    font-size: 25px;
}
#turnToPlayIndicator {
    text-align: left;
    margin-left:51%;
    font-size: 25px;
}
#scoreIndicator {
    text-align: center;
    font-size: 25px;
}


.victory{
    z-index: 4;

    position: absolute;
    width: 80vw;
    min-width: 300px;
    height: 10vh;
    min-height: 100px 
    padding-top: 500px;
    left: 10vw;
    border: 3px solid green;

    background: rgb(0, 180, 20); /* Fallback for older browsers without RGBA-support */
    background: rgba(0, 180, 20, 0.8);

    color: black;
    font-size: 50px;
    text-align: center;
    padding: 30px 0;
}
.defeat{
    z-index: 4;

    position: absolute;
    width: 80vw;
    min-width: 300px;
    height: 10vh;
    min-height: 100px 
    top: 500px;
    left: 10vw;
    border: 3px solid #800;

    background: rgb(180, 0, 20); /* Fallback for older browsers without RGBA-support */
    background: rgba(180, 0, 20, 0.8);

    color: black;
    font-size: 50px;
    text-align: center;
    padding: 30px 0;
}
html { height: 100%; }